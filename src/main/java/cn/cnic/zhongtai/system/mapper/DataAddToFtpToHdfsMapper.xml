<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.cnic.zhongtai.system.mapper.DataAddToFtpToHdfsMapper" >
  <resultMap id="BaseResultMap" type="cn.cnic.zhongtai.system.model.DataAddToFtpToHdfs" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="data_import_task_name" property="dataImportTaskName" jdbcType="VARCHAR" />
    <result column="protocol" property="protocol" jdbcType="VARCHAR" />
    <result column="host" property="host" jdbcType="VARCHAR" />
    <result column="port" property="port" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="suffix" property="suffix" jdbcType="VARCHAR" />
    <result column="hdfs_path" property="hdfsPath" jdbcType="VARCHAR" />
    <result column="data_import_task_id" property="dataImportTaskId" jdbcType="VARCHAR" />
    <result column="cron" property="cron" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, data_import_task_name, protocol, host, port, username, password, path, suffix, 
    hdfs_path, data_import_task_id, cron
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.cnic.zhongtai.system.model.DataAddToFtpToHdfsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from data_import_ftp_to_hive
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from data_import_ftp_to_hive
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from data_import_ftp_to_hive
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.cnic.zhongtai.system.model.DataAddToFtpToHdfsExample" >
    delete from data_import_ftp_to_hive
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.cnic.zhongtai.system.model.DataAddToFtpToHdfs" >
    insert into data_import_ftp_to_hive (id, data_import_task_name, protocol, 
      host, port, username, 
      password, path, suffix, 
      hdfs_path, data_import_task_id, cron
      )
    values (#{id,jdbcType=INTEGER}, #{dataImportTaskName,jdbcType=VARCHAR}, #{protocol,jdbcType=VARCHAR}, 
      #{host,jdbcType=VARCHAR}, #{port,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, #{suffix,jdbcType=VARCHAR}, 
      #{hdfsPath,jdbcType=VARCHAR}, #{dataImportTaskId,jdbcType=VARCHAR}, #{cron,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.cnic.zhongtai.system.model.DataAddToFtpToHdfs" >
    insert into data_import_ftp_to_hive
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="dataImportTaskName != null" >
        data_import_task_name,
      </if>
      <if test="protocol != null" >
        protocol,
      </if>
      <if test="host != null" >
        host,
      </if>
      <if test="port != null" >
        port,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="path != null" >
        path,
      </if>
      <if test="suffix != null" >
        suffix,
      </if>
      <if test="hdfsPath != null" >
        hdfs_path,
      </if>
      <if test="dataImportTaskId != null" >
        data_import_task_id,
      </if>
      <if test="cron != null" >
        cron,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="dataImportTaskName != null" >
        #{dataImportTaskName,jdbcType=VARCHAR},
      </if>
      <if test="protocol != null" >
        #{protocol,jdbcType=VARCHAR},
      </if>
      <if test="host != null" >
        #{host,jdbcType=VARCHAR},
      </if>
      <if test="port != null" >
        #{port,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="suffix != null" >
        #{suffix,jdbcType=VARCHAR},
      </if>
      <if test="hdfsPath != null" >
        #{hdfsPath,jdbcType=VARCHAR},
      </if>
      <if test="dataImportTaskId != null" >
        #{dataImportTaskId,jdbcType=VARCHAR},
      </if>
      <if test="cron != null" >
        #{cron,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.cnic.zhongtai.system.model.DataAddToFtpToHdfsExample" resultType="java.lang.Integer" >
    select count(*) from data_import_ftp_to_hive
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update data_import_ftp_to_hive
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.dataImportTaskName != null" >
        data_import_task_name = #{record.dataImportTaskName,jdbcType=VARCHAR},
      </if>
      <if test="record.protocol != null" >
        protocol = #{record.protocol,jdbcType=VARCHAR},
      </if>
      <if test="record.host != null" >
        host = #{record.host,jdbcType=VARCHAR},
      </if>
      <if test="record.port != null" >
        port = #{record.port,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null" >
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.suffix != null" >
        suffix = #{record.suffix,jdbcType=VARCHAR},
      </if>
      <if test="record.hdfsPath != null" >
        hdfs_path = #{record.hdfsPath,jdbcType=VARCHAR},
      </if>
      <if test="record.dataImportTaskId != null" >
        data_import_task_id = #{record.dataImportTaskId,jdbcType=VARCHAR},
      </if>
      <if test="record.cron != null" >
        cron = #{record.cron,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update data_import_ftp_to_hive
    set id = #{record.id,jdbcType=INTEGER},
      data_import_task_name = #{record.dataImportTaskName,jdbcType=VARCHAR},
      protocol = #{record.protocol,jdbcType=VARCHAR},
      host = #{record.host,jdbcType=VARCHAR},
      port = #{record.port,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      path = #{record.path,jdbcType=VARCHAR},
      suffix = #{record.suffix,jdbcType=VARCHAR},
      hdfs_path = #{record.hdfsPath,jdbcType=VARCHAR},
      data_import_task_id = #{record.dataImportTaskId,jdbcType=VARCHAR},
      cron = #{record.cron,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.cnic.zhongtai.system.model.DataAddToFtpToHdfs" >
    update data_import_ftp_to_hive
    <set >
      <if test="dataImportTaskName != null" >
        data_import_task_name = #{dataImportTaskName,jdbcType=VARCHAR},
      </if>
      <if test="protocol != null" >
        protocol = #{protocol,jdbcType=VARCHAR},
      </if>
      <if test="host != null" >
        host = #{host,jdbcType=VARCHAR},
      </if>
      <if test="port != null" >
        port = #{port,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="suffix != null" >
        suffix = #{suffix,jdbcType=VARCHAR},
      </if>
      <if test="hdfsPath != null" >
        hdfs_path = #{hdfsPath,jdbcType=VARCHAR},
      </if>
      <if test="dataImportTaskId != null" >
        data_import_task_id = #{dataImportTaskId,jdbcType=VARCHAR},
      </if>
      <if test="cron != null" >
        cron = #{cron,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.cnic.zhongtai.system.model.DataAddToFtpToHdfs" >
    update data_import_ftp_to_hive
    set data_import_task_name = #{dataImportTaskName,jdbcType=VARCHAR},
      protocol = #{protocol,jdbcType=VARCHAR},
      host = #{host,jdbcType=VARCHAR},
      port = #{port,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      suffix = #{suffix,jdbcType=VARCHAR},
      hdfs_path = #{hdfsPath,jdbcType=VARCHAR},
      data_import_task_id = #{dataImportTaskId,jdbcType=VARCHAR},
      cron = #{cron,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>